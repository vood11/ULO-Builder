name: ULO Autobuilder v2 (Final)

on:
  workflow_dispatch:
    inputs:
      rootfs_size:
        description: 'Ukuran ROOTFS, minimal 640 (756, 1024, 2048, dll)'
        required: true
        default: '1024'
        type: string
      fwinfo:
        description: 'Informasi Firmware'
        required: true
        default: 'catatan rilis'
        type: string

jobs:
  # JOB 1: Membuat Draf Rilis terlebih dahulu
  create_release:
    name: 1. Create Draft Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_tag: ${{ steps.get_date.outputs.release_tag }}
    steps:
      - name: Dapatkan Tanggal dan Buat Tag
        id: get_date
        run: |
          export TZ="Asia/Jakarta"
          bulan=$(date +%B)
          tanggal=$(date +%d)
          tahun=$(date +%Y)
          echo "release_tag=ULO-RELEASE_${bulan}-${tanggal}-${tahun}" >> $GITHUB_OUTPUT

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_date.outputs.release_tag }}
          release_name: "Rilis ULO Autobuild | ${{ steps.get_date.outputs.release_tag }}"
          body: |
            ## Rilis OpenWrt untuk Berbagai Perangkat SBC dan STB
            Firmware ini dibuild menggunakan Github Actions
            ### Informasi Firmware OpenWrt
            - Ukuran ROOTFS: ${{ inputs.rootfs_size }}
            - Informasi Firmware: ${{ inputs.fwinfo }}
          draft: true
          prerelease: false

  # JOB 2: Membangun semua firmware secara paralel dan langsung mengunggahnya
  build_and_upload:
    name: 2. Build and Upload Firmware
    needs: create_release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        config:
          - { device: s905x, kernel: '6.1.66-DBAI' }
          - { device: s905x, kernel: '4.9.337' }
        rootfs:
          - 'ImmortalWrt-21.02.7-DBAI-armvirt-rootfs.tar.gz'
          - 'OpenWrt-23.05.4-A2OS-armsr-armv8-generic-rootfs.tar.gz'
    steps:
      - name: Pembersihan dan Instalasi Prasyarat
        run: |
          sudo -E apt-get update
          sudo -E apt-get -y install git
      - name: Checkout Repositori
        uses: actions/checkout@v4
      - name: Patching ULO
        run: |
          if [ -f ./.github/workflows/ULO_Workflow.patch ]; then
            mv ./.github/workflows/ULO_Workflow.patch ./ULO_Workflow.patch
            patch -p1 < ./ULO_Workflow.patch
          fi
      - name: Membangun OpenWrt
        run: |
          sudo ./ulo -y -m ${{ matrix.config.device }} -r ${{ matrix.rootfs }} -k ${{ matrix.config.kernel }} -s ${{ inputs.rootfs_size }}

      - name: Find Firmware File
        id: find_file
        run: |
          # GANTI BAGIAN DI BAWAH INI DENGAN DIREKTORI YANG ANDA TEMUKAN DARI LOG DEBUG.
          # Hapus '/nama-device' di akhir path jika ada.
          # Contoh: Jika Anda menemukan '/root/out/s905x/...', maka ganti menjadi '/root/out'
          SEARCH_DIR="/root/out" # <-- GANTI INI SESUAI HASIL DEBUG ANDA

          FILE_PATH=$(sudo find "${SEARCH_DIR}/${{ matrix.config.device }}" -maxdepth 1 -name "*.img.gz" -type f)
          
          if [ -z "$FILE_PATH" ]; then
            echo "Error: File .img.gz tidak ditemukan di direktori yang diharapkan."
            exit 1
          fi
          
          echo "FILE_PATH=$FILE_PATH" >> $GITHUB_ENV
          echo "File ditemukan di: $FILE_PATH"

      - name: Upload Firmware to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{ env.FILE_PATH }}
          asset_name: ${{ matrix.config.device }}_${{ matrix.config.kernel }}_${{ matrix.rootfs }}.img.gz
          asset_content_type: application/gzip

  # JOB 3: Mempublikasikan rilis setelah semua build selesai dan diunggah
  publish_release:
    name: 3. Publish Release
    needs: [create_release, build_and_upload]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: success()
    steps:
      - name: Publish the release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ needs.create_release.outputs.release_tag }}
          draft: false
          prerelease: false
