name: ULO Autobuilder v2 (Flexible Rootfs)

on:
  workflow_dispatch:
    inputs:
      # --- PERUBAHAN 1: Input baru untuk memilih RootFS ---
      rootfs_choice:
        description: 'Pilih RootFS yang akan di-build'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - ImmortalWrt-21.02.7-DBAI-armvirt-rootfs.tar.gz
          - OpenWrt-23.05.4-A2OS-armsr-armv8-generic-rootfs.tar.gz
      rootfs_size:
        description: 'Ukuran ROOTFS, minimal 640 (756, 1024, 2048, dll)'
        required: true
        default: '1024'
        type: string
      fwinfo:
        description: 'Informasi Firmware'
        required: true
        default: 'catatan rilis'
        type: string

jobs:
  # Job baru untuk menentukan matriks rootfs secara dinamis
  determine_rootfs:
    name: 1. Determine RootFS
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Determine RootFS build matrix
        id: set-matrix
        run: |
          if [[ "${{ github.event.inputs.rootfs_choice }}" == "all" ]]; then
            echo "Akan build semua versi RootFS."
            # Membuat matriks dengan 2 entri untuk build semua rootfs
            echo 'matrix={"include":[{"name":"ImmortalWrt-21.02.7-DBAI-armvirt-rootfs.tar.gz","tag_suffix":"ImmortalWrt-21.02.7-DBAI"},{"name":"OpenWrt-23.05.4-A2OS-armsr-armv8-generic-rootfs.tar.gz","tag_suffix":"OpenWrt-23.05.4-A2OS"}]}' >> $GITHUB_OUTPUT
          else
            echo "Akan build RootFS: ${{ github.event.inputs.rootfs_choice }}"
            TAG_SUFFIX=""
            # Menentukan suffix untuk nama rilis berdasarkan pilihan
            if [[ "${{ github.event.inputs.rootfs_choice }}" == "ImmortalWrt-21.02.7-DBAI-armvirt-rootfs.tar.gz" ]]; then
              TAG_SUFFIX="ImmortalWrt-21.02.7-DBAI"
            else
              TAG_SUFFIX="OpenWrt-23.05.4-A2OS"
            fi
            # Membuat matriks dengan 1 entri saja
            echo "matrix={\"include\":[{\"name\":\"${{ github.event.inputs.rootfs_choice }}\",\"tag_suffix\":\"$TAG_SUFFIX\"}]}" >> $GITHUB_OUTPUT
          fi

  build_ipk:
    name: 2. Build Firmware
    needs: determine_rootfs
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.determine_rootfs.outputs.matrix) }}
    steps:
      - name: Pembersihan dan Instalasi Prasyarat
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get update
          sudo -E apt-get -y install jq lolcat build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev rsync unzip zlib1g-dev file wget aria2
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

      - name: Checkout Repositori
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Cache repositori ULO
        uses: actions/cache@v4
        with:
          path: |
            core/
            rootfs/
            device/
          key: ${{ runner.os }}-ulo-repo-${{ hashFiles('ulo') }}

      - name: Patching ULO
        run: |
          if [ -f ./.github/workflows/ULO_Workflow.patch ]; then
             mv ./.github/workflows/ULO_Workflow.patch ./ULO_Workflow.patch
             patch -p1 < ./ULO_Workflow.patch
          fi

      - name: Membangun Semua Device untuk RootFS (${{ matrix.name }})
        run: |
          # Mendefinisikan daftar perangkat sebagai blok teks yang andal
          DEVICE_LIST=$(cat <<EOF
          {"device":"s905x","kernel":"6.1.66-DBAI"}
          EOF
          )

          # Memproses daftar perangkat baris per baris
          echo "$DEVICE_LIST" | while read -r device_config; do
            if [ -z "$device_config" ]; then continue; fi

            DEVICE=$(echo "$device_config" | jq -r .device)
            KERNEL=$(echo "$device_config" | jq -r .kernel)
            
            echo "=========================================================="
            echo "Membangun: Device=$DEVICE, Kernel=$KERNEL, RootFS=${{ matrix.name }}"
            echo "=========================================================="
            
            sudo ./ulo -y -m "$DEVICE" -r "${{ matrix.name }}" -k "$KERNEL" -s "${{ github.event.inputs.rootfs_size }}"
            
            echo "Membuat artefak untuk $DEVICE..."
            mkdir -p ./artifact/"$DEVICE"
            cp -rf ./out/"$DEVICE"/* ./artifact/"$DEVICE"/ || echo "Tidak ada file output untuk disalin dari $DEVICE"
          done

      - name: Mengirim Paket
        uses: actions/upload-artifact@v4
        with:
          name: openwrt_package_${{ matrix.tag_suffix }}
          path: ./artifact/

  upload_release:
    name: 3. Create Release
    needs: [determine_rootfs, build_ipk]
    if: success()
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.determine_rootfs.outputs.matrix) }}
    steps:
      - name: Checkout Repositori
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Unduh artefak untuk ${{ matrix.tag_suffix }}
        uses: actions/download-artifact@v4
        with:
          name: openwrt_package_${{ matrix.tag_suffix }}
          path: artifacts

      - name: Gabungkan artefak
        run: |
          mkdir -p combined_artifact
          # Perintah ini akan menemukan semua file di dalam sub-direktori dan memindahkannya
          find ./artifacts -type f -exec mv {} ./combined_artifact/ \;
          echo "Isi folder yang akan dirilis:"
          ls -la combined_artifact/

      # --- PERUBAHAN 2: Nama rilis diubah menjadi dinamis ---
      - name: Dapatkan Tanggal Saat Ini
        id: date
        run: |
          sudo apt-get install -y locales
          sudo locale-gen id_ID.UTF-8
          export LC_TIME=id_ID.UTF-8
          export TZ="Asia/Jakarta"
          bulan=$(date +%B)
          tanggal=$(date +%d)
          tahun=$(date +%Y)
          echo "release_tag=ULO-RELEASE_${{ matrix.tag_suffix }}_${bulan}-${tanggal}-${tahun}" >> $GITHUB_OUTPUT

      - name: Unggah aset rilis
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: combined_artifact/*
          tag: ${{ steps.date.outputs.release_tag }}
          file_glob: true
          overwrite: true
          body: |
            ## Rilis OpenWrt untuk Berbagai Perangkat SBC dan STB
            Firmware ini dibuild menggunakan Github Actions untuk RootFS: **${{ matrix.tag_suffix }}**
            ### Informasi Firmware OpenWrt
            - Ukuran ROOTFS: ${{ github.event.inputs.rootfs_size }}
            - Informasi Firmware: ${{ github.event.inputs.fwinfo }}
