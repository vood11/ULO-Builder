name: ULO Autobuilder v2 (Flexible Options)

on:
  workflow_dispatch:
    inputs:
      rootfs_choice:
        description: 'Pilih RootFS yang akan dibuild atau pilih "custom" untuk menggunakan URL'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - ImmortalWrt-21.02.7-DBAI-armvirt-rootfs.tar.gz
          - OpenWrt-23.05.4-A2OS-armsr-armv8-generic-rootfs.tar.gz
          - OpenWrt-23.05.4-ALKHANET-armsr-armv8-generic-rootfs.tar.gz
          - OpenWrt-23.05.5-ALKHANET-armsr-armv8-generic-rootfs.tar.gz
          - OpenWrt-23.05.5-InsomWRT-armsr-armv8-generic-rootfs.tar.gz
          - custom
      
      custom_rootfs_url:
        description: 'URL download RootFS (Gunakan tautan dari GDrive, Mega, atau hotlink)'
        required: false
        type: string

      device_choice:
        description: 'Pilih Device & Kernel (pilih "all" untuk build semua)'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          # --- Amlogic ---
          - 'Amlogic: s905x (Kernel 6.1.66-DBAI)'
          - 'Amlogic: s905x (Kernel 4.9.337)'
          - 'Amlogic: s905x2 (Kernel 6.1.66-DBAI)'
          - 'Amlogic: s905x2 (Kernel 5.4.279)'
          - 'Amlogic: s905x2 (Kernel 4.9.337)'
          - 'Amlogic: s905x3 (Kernel 6.1.66-DBAI)'
          - 'Amlogic: s905x4 (Kernel 6.1.66-DBAI)'
          - 'Amlogic: s905x4 (Kernel 5.4.279)'
          # --- Rockchip ---
          - 'Rockchip: rk3588s-orangepi-5 (Kernel 5.10.160-rk35v-dbai)'
          - 'Rockchip: rk3566-orangepi-3b (Kernel 5.10.160-rk35v-dbai)'
          - 'Rockchip: rk3588-orangepi-5-max (Kernel 5.10.160-rk35v-dbai)'
          - 'Rockchip: rk3588-orangepi-5-plus (Kernel 5.10.160-rk35v-dbai)'
          # --- Allwinner ---
          - 'Allwinner: h618-orangepi-zero3 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h618-orangepi-zero3 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: a64-bananapi-m64 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: a64-bananapi-m64 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: a64-nanopi-a64 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: a64-nanopi-a64 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h313-x96q-lpddr3 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h313-x96q-lpddr3 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h5-orangepi-pc2 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h5-orangepi-pc2 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h5-orangepi-prime (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h5-orangepi-prime (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h5-orangepi-zeroplus (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h5-orangepi-zeroplus (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h5-orangepi-zeroplus2 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h5-orangepi-zeroplus2 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h6-orangepi-1plus (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h6-orangepi-1plus (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h6-orangepi-3 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h6-orangepi-3 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h6-orangepi-3lts (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h6-orangepi-3lts (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h6-orangepi-lite2 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h6-orangepi-lite2 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h6-tanix-tx6 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h6-tanix-tx6 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h616-orangepi-zero2 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h616-orangepi-zero2 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h616-x96-mate (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h616-x96-mate (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h618-orangepi-zero2w (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h618-orangepi-zero2w (Kernel 6.1.31-AW64-DBAI)'
      rootfs_size:
        description: 'Ukuran ROOTFS, minimal 640 (756, 1024, 2048, dll)'
        required: true
        default: '1024'
        type: string
      fwinfo:
        description: 'Informasi pemilihan versi firmware'
        required: true
        default: 's905x default adalah untuk STB B860H V1-V2/Dens TV V2Y jadi tinggal pakai setelah burning (HG680-P, Dens TV V2X dan type lain yang memakai SOC AMLOGIC s905x perlu ganti DTB berlaku untuk semua STB AMLOGIC), s905x2=HG680-FJ (B860H V5, Transvision Gen2, CYBORG 001/MNC Playbox perlu ganti DTB), s905x3=X96 Air Gigabit/WECHIP V9 (X96 MAX +, HK1 BOX, H96 MAX X3, dll jugsa sama perlu ganti DTB), s905x4=Akari AX810/Advan AT01 (wifi on gunakan kernel 5.4.x contoh 5.4.279 lengkap driver wifinya), device selain AMLOGIC hanya kompatibel sesuai title firmware'
        type: string

jobs:
  # JOB 1: HANYA BERJALAN JIKA MEMILIH DARI DAFTAR (BUKAN 'custom')
  build_from_list:
    name: Build from Predefined List
    if: github.event.inputs.rootfs_choice != 'custom'
    uses: ./.github/workflows/reusable-build.yml
    with:
      rootfs_choice: ${{ github.event.inputs.rootfs_choice }}
      device_choice: ${{ github.event.inputs.device_choice }}
      rootfs_size: ${{ github.event.inputs.rootfs_size }}
      fwinfo: ${{ github.event.inputs.fwinfo }}
    secrets: inherit

  # JOB 2: HANYA BERJALAN JIKA MEMILIH 'custom'
  build_from_url:
    name: Build from Custom URL
    if: github.event.inputs.rootfs_choice == 'custom'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: 1. Instalasi Prasyarat
        run: |
          sudo -E apt-get update
          sudo -E apt-get -y install jq lolcat build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev rsync unzip zlib1g-dev file wget aria2 python3-pip
          if [[ "${{ github.event.inputs.custom_rootfs_url }}" =~ "drive.google.com" ]]; then
            echo "Menginstal gdown..."
            sudo pip3 install gdown
          fi
          if [[ "${{ github.event.inputs.custom_rootfs_url }}" =~ "mega.nz" ]]; then
            echo "Menginstal megatools..."
            sudo -E apt-get -y install megatools
          fi

      - name: 2. Checkout Repositori & Setup Awal
        uses: actions/checkout@v4
      - run: sudo ./ulo -y

      - name: 3. Download RootFS & Dapatkan Nama Asli
        id: download
        run: |
          URL="${{ github.event.inputs.custom_rootfs_url }}"
          DOWNLOAD_DIR="rootfs_temp"
          mkdir -p "$DOWNLOAD_DIR"
          
          echo "Mendeteksi jenis tautan dari: $URL"
          if [[ "$URL" =~ "drive.google.com" ]]; then
            sudo gdown --output "$DOWNLOAD_DIR/" "$URL"
          elif [[ "$URL" =~ "mega.nz" ]]; then
            sudo megadl --path "$DOWNLOAD_DIR" "$URL"
          else
            sudo aria2c --quiet=true --dir="$DOWNLOAD_DIR" -x 16 -s 16 -k 1M "$URL"
          fi

          DOWNLOADED_FILE=$(find "$DOWNLOAD_DIR" -type f -print -quit)
          if [ ! -f "$DOWNLOADED_FILE" ]; then
            echo "Gagal menemukan file yang diunduh."
            exit 1
          fi
          
          REAL_FILENAME=$(basename "$DOWNLOADED_FILE")
          echo "Nama file asli yang terdeteksi: $REAL_FILENAME"
          
          sudo mv "$DOWNLOADED_FILE" "rootfs/custom-rootfs.tar.gz"
          sudo rm -rf "$DOWNLOAD_DIR"
          echo "real_filename=$REAL_FILENAME" >> $GITHUB_OUTPUT

      - name: 4. Buat Nama Rilis & Tag
        id: release_info
        run: |
          REAL_FILENAME="${{ steps.download.outputs.real_filename }}"
          CLEAN_SUFFIX=$(echo "$REAL_FILENAME" | sed -e 's/-rootfs//g' -e 's|_rootfs||g' -e 's/\.tar\.gz$//' -e 's/\.img\.gz$//' -e 's/\.img$//' -e 's/\.zip$//')
          FINAL_TAG_SUFFIX="Custom-$CLEAN_SUFFIX"
          
          sudo apt-get install -y locales
          sudo locale-gen id_ID.UTF-8
          export LC_TIME=id_ID.UTF-8
          export TZ="Asia/Jakarta"
          bulan=$(date +%B)
          tanggal=$(date +%d)
          tahun=$(date +%Y)
          
          RELEASE_TAG="${FINAL_TAG_SUFFIX}_ULO-RELEASE_${bulan}-${tanggal}-${tahun}"
          echo "Nama tag rilis final: $RELEASE_TAG"
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_OUTPUT
          echo "tag_suffix=$FINAL_TAG_SUFFIX" >> $GITHUB_OUTPUT

      - name: 5. Bangun Firmware
        run: |
          ROOTFS_NAME="custom-rootfs.tar.gz"
          if [[ "${{ github.event.inputs.device_choice }}" == "all" ]]; then
            DEVICE_LIST=$(cat <<EOF
            {"device":"s905x","kernel":"6.1.66-DBAI"}
            {"device":"s905x","kernel":"4.9.337"}
            {"device":"s905x2","kernel":"6.1.66-DBAI"}
            {"device":"s905x2","kernel":"5.4.279"}
            {"device":"s905x2","kernel":"4.9.337"}
            {"device":"s905x3","kernel":"6.1.66-DBAI"}
            {"device":"s905x4","kernel":"6.1.66-DBAI"}
            {"device":"s905x4","kernel":"5.4.279"}
            {"device":"rk3588s-orangepi-5","kernel":"5.10.160-rk35v-dbai"}
            {"device":"rk3566-orangepi-3b","kernel":"5.10.160-rk35v-dbai"}
            {"device":"rk3588-orangepi-5-max","kernel":"5.10.160-rk35v-dbai"}
            {"device":"rk3588-orangepi-5-plus","kernel":"5.10.160-rk35v-dbai"}
            {"device":"h618-orangepi-zero3","kernel":"6.1.104-AW64-DBAI"}
            {"device":"h618-orangepi-zero3","kernel":"6.1.31-AW64-DBAI"}
            {"device":"a64-bananapi-m64","kernel":"6.1.104-AW64-DBAI"}
            {"device":"a64-bananapi-m64","kernel":"6.1.31-AW64-DBAI"}
            {"device":"a64-nanopi-a64","kernel":"6.1.104-AW64-DBAI"}
            {"device":"a64-nanopi-a64","kernel":"6.1.31-AW64-DBAI"}
            {"device":"h313-x96q-lpddr3","kernel":"6.1.104-AW64-DBAI"}
            {"device":"h313-x96q-lpddr3","kernel":"6.1.31-AW64-DBAI"}
            {"device":"h5-orangepi-pc2","kernel":"6.1.104-AW64-DBAI"}
            {"device":"h5-orangepi-pc2","kernel":"6.1.31-AW64-DBAI"}
            {"device":"h5-orangepi-prime","kernel":"6.1.104-AW64-DBAI"}
            {"device":"h5-orangepi-prime","kernel":"6.1.31-AW64-DBAI"}
            {"device":"h5-orangepi-zeroplus","kernel":"6.1.104-AW64-DBAI"}
            {"device":"h5-orangepi-zeroplus","kernel":"6.1.31-AW64-DBAI"}
            {"device":"h5-orangepi-zeroplus2","kernel":"6.1.104-AW64-DBAI"}
            {"device":"h5-orangepi-zeroplus2","kernel":"6.1.31-AW64-DBAI"}
            {"device":"h6-orangepi-1plus","kernel":"6.1.104-AW64-DBAI"}
            {"device":"h6-orangepi-1plus","kernel":"6.1.31-AW64-DBAI"}
            {"device":"h6-orangepi-3","kernel":"6.1.104-AW64-DBAI"}
            {"device":"h6-orangepi-3","kernel":"6.1.31-AW64-DBAI"}
            {"device":"h6-orangepi-3lts","kernel":"6.1.104-AW64-DBAI"}
            {"device":"h6-orangepi-3lts","kernel":"6.1.31-AW64-DBAI"}
            {"device":"h6-orangepi-lite2","kernel":"6.1.104-AW64-DBAI"}
            {"device":"h6-orangepi-lite2","kernel":"6.1.31-AW64-DBAI"}
            {"device":"h6-tanix-tx6","kernel":"6.1.104-AW64-DBAI"}
            {"device":"h6-tanix-tx6","kernel":"6.1.31-AW64-DBAI"}
            {"device":"h616-orangepi-zero2","kernel":"6.1.104-AW64-DBAI"}
            {"device":"h616-orangepi-zero2","kernel":"6.1.31-AW64-DBAI"}
            {"device":"h616-x96-mate","kernel":"6.1.104-AW64-DBAI"}
            {"device":"h616-x96-mate","kernel":"6.1.31-AW64-DBAI"}
            {"device":"h618-orangepi-zero2w","kernel":"6.1.104-AW64-DBAI"}
            {"device":"h618-orangepi-zero2w","kernel":"6.1.31-AW64-DBAI"}
            EOF
            )
            echo "$DEVICE_LIST" | while read -r device_config; do
              if [ -z "$device_config" ]; then continue; fi
              DEVICE=$(echo "$device_config" | jq -r .device)
              KERNEL=$(echo "$device_config" | jq -r .kernel)
              sudo ./ulo -m "$DEVICE" -r "$ROOTFS_NAME" -k "$KERNEL" -s "${{ github.event.inputs.rootfs_size }}"
            done
          else
            CHOICE="${{ github.event.inputs.device_choice }}"
            DEVICE=$(echo "$CHOICE" | sed -n 's/.*: \(.*\) (.*/\1/p')
            KERNEL=$(echo "$CHOICE" | sed -n 's/.*(Kernel \(.*\))/\1/p')
            sudo ./ulo -m "$DEVICE" -r "$ROOTFS_NAME" -k "$KERNEL" -s "${{ github.event.inputs.rootfs_size }}"
          fi
          
      - name: 6. Unggah Aset Rilis
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: out/**/*
          tag: ${{ steps.release_info.outputs.release_tag }}
          file_glob: true
          overwrite: true
          body: |
            ## Rilis OpenWrt untuk Berbagai Perangkat SBC dan STB
            ### Informasi firmware OpenWrt
            - Firmware ini dibuild menggunakan Github Actions dengan RootFS: **${{ steps.release_info.outputs.tag_suffix }}**
            - Ukuran ROOTFS: ${{ github.event.inputs.rootfs_size }}
            - Informasi pemilihan versi firmware: ${{ github.event.inputs.fwinfo }}
            - Facebook FP: https://www.facebook.com/armarchindo/
            - Blog: https://dbai-team.com
            - Pertanyaan dan diskusi ke grup Discord DBAI: https://discord.gg/BXNzaJFTPP

  delete_old_runs:
    name: Delete Old Workflow Runs
    needs: [build_from_list, build_from_url]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 3
