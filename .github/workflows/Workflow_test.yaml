name: ULO Autobuilder v2 (Flexible Options)

on:
  workflow_dispatch:
    inputs:
      rootfs_choice:
        description: 'Pilih RootFS yang akan di-build'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - ImmortalWrt-21.02.7-DBAI-armvirt-rootfs.tar.gz
          - OpenWrt-23.05.4-A2OS-armsr-armv8-generic-rootfs.tar.gz
      
      # --- PERUBAHAN: Opsi device dibuat lebih deskriptif dan mudah dibaca ---
      device_choice:
        description: 'Pilih Device & Kernel (pilih "all" untuk build semua)'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          # --- Amlogic ---
          - 'Amlogic: s905x (Kernel 6.1.66-DBAI)'
          - 'Amlogic: s905x (Kernel 4.9.337)'
          - 'Amlogic: s905x2 (Kernel 6.1.66-DBAI)'
          - 'Amlogic: s905x2 (Kernel 5.4.279)'
          - 'Amlogic: s905x2 (Kernel 4.9.337)'
          - 'Amlogic: s905x3 (Kernel 6.1.66-DBAI)'
          - 'Amlogic: s905x4 (Kernel 6.1.66-DBAI)'
          - 'Amlogic: s905x4 (Kernel 5.4.279)'
          # --- Rockchip ---
          - 'Rockchip: rk3588s-orangepi-5 (Kernel 5.10.160-rk35v-dbai)'
          - 'Rockchip: rk3566-orangepi-3b (Kernel 5.10.160-rk35v-dbai)'
          - 'Rockchip: rk3588-orangepi-5-max (Kernel 5.10.160-rk35v-dbai)'
          - 'Rockchip: rk3588-orangepi-5-plus (Kernel 5.10.160-rk35v-dbai)'
          # --- Allwinner ---
          - 'Allwinner: h618-orangepi-zero3 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h618-orangepi-zero3 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: a64-bananapi-m64 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: a64-bananapi-m64 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: a64-nanopi-a64 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: a64-nanopi-a64 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h313-x96q-lpddr3 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h313-x96q-lpddr3 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h5-orangepi-pc2 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h5-orangepi-pc2 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h5-orangepi-prime (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h5-orangepi-prime (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h5-orangepi-zeroplus (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h5-orangepi-zeroplus (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h5-orangepi-zeroplus2 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h5-orangepi-zeroplus2 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h6-orangepi-1plus (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h6-orangepi-1plus (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h6-orangepi-3 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h6-orangepi-3 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h6-orangepi-3lts (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h6-orangepi-3lts (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h6-orangepi-lite2 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h6-orangepi-lite2 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h6-tanix-tx6 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h6-tanix-tx6 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h616-orangepi-zero2 (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h616-orangepi-zero2 (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h616-x96-mate (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h616-x96-mate (Kernel 6.1.31-AW64-DBAI)'
          - 'Allwinner: h618-orangepi-zero2w (Kernel 6.1.104-AW64-DBAI)'
          - 'Allwinner: h618-orangepi-zero2w (Kernel 6.1.31-AW64-DBAI)'
      rootfs_size:
        description: 'Ukuran ROOTFS, minimal 640 (756, 1024, 2048, dll)'
        required: true
        default: '1024'
        type: string
      fwinfo:
        description: 'Informasi Firmware'
        required: true
        default: 's905x default adalah B860H V1-V2 jadi tinggal burn (HG680-P dan lainnya tinggal ganti DTB berlaku selanjutnya), s905x2 = HG680-FJ, s905x3=X96 Air Gigabit/WECHIP V9, s905x4=Akari AX810/AT01, device selain AMLOGIC hanya kompatibel sesuai title firmware'
        type: string

jobs:
  determine_rootfs:
    name: 1. Determine RootFS
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Determine RootFS build matrix
        id: set-matrix
        run: |
          if [[ "${{ github.event.inputs.rootfs_choice }}" == "all" ]]; then
            echo "Akan build semua versi RootFS."
            echo 'matrix={"include":[{"name":"ImmortalWrt-21.02.7-DBAI-armvirt-rootfs.tar.gz","tag_suffix":"ImmortalWrt-21.02.7-DBAI"},{"name":"OpenWrt-23.05.4-A2OS-armsr-armv8-generic-rootfs.tar.gz","tag_suffix":"OpenWrt-23.05.4-A2OS"}]}' >> $GITHUB_OUTPUT
          else
            echo "Akan build RootFS: ${{ github.event.inputs.rootfs_choice }}"
            TAG_SUFFIX=""
            if [[ "${{ github.event.inputs.rootfs_choice }}" == "ImmortalWrt-21.02.7-DBAI-armvirt-rootfs.tar.gz" ]]; then
              TAG_SUFFIX="ImmortalWrt-21.02.7-DBAI"
            else
              TAG_SUFFIX="OpenWrt-23.05.4-A2OS"
            fi
            echo "matrix={\"include\":[{\"name\":\"${{ github.event.inputs.rootfs_choice }}\",\"tag_suffix\":\"$TAG_SUFFIX\"}]}" >> $GITHUB_OUTPUT
          fi

  build_ipk:
    name: 2. Build Firmware
    needs: determine_rootfs
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.determine_rootfs.outputs.matrix) }}
    steps:
      - name: Pembersihan dan Instalasi Prasyarat
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get update
          sudo -E apt-get -y install jq lolcat build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev rsync unzip zlib1g-dev file wget aria2
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

      - name: Checkout Repositori
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Cache repositori ULO
        uses: actions/cache@v4
        with:
          path: |
            core/
            rootfs/
            device/
          key: ${{ runner.os }}-ulo-repo-${{ hashFiles('ulo') }}

      - name: Patching ULO
        run: |
          if [ -f ./.github/workflows/ULO_Workflow.patch ]; then
             mv ./.github/workflows/ULO_Workflow.patch ./ULO_Workflow.patch
             patch -p1 < ./ULO_Workflow.patch
          fi

      - name: Membangun Semua Device (jika 'all' dipilih)
        if: github.event.inputs.device_choice == 'all'
        run: |
          DEVICE_LIST=$(cat <<EOF
          {"device":"s905x","kernel":"6.1.66-DBAI"}
          {"device":"s905x","kernel":"4.9.337"}
          {"device":"s905x2","kernel":"6.1.66-DBAI"}
          {"device":"s905x2","kernel":"5.4.279"}
          {"device":"s905x2","kernel":"4.9.337"}
          {"device":"s905x3","kernel":"6.1.66-DBAI"}
          {"device":"s905x4","kernel":"6.1.66-DBAI"}
          {"device":"s905x4","kernel":"5.4.279"}
          {"device":"rk3588s-orangepi-5","kernel":"5.10.160-rk35v-dbai"}
          {"device":"rk3566-orangepi-3b","kernel":"5.10.160-rk35v-dbai"}
          {"device":"rk3588-orangepi-5-max","kernel":"5.10.160-rk35v-dbai"}
          {"device":"rk3588-orangepi-5-plus","kernel":"5.10.160-rk35v-dbai"}
          {"device":"h618-orangepi-zero3","kernel":"6.1.104-AW64-DBAI"}
          {"device":"h618-orangepi-zero3","kernel":"6.1.31-AW64-DBAI"}
          {"device":"a64-bananapi-m64","kernel":"6.1.104-AW64-DBAI"}
          {"device":"a64-bananapi-m64","kernel":"6.1.31-AW64-DBAI"}
          {"device":"a64-nanopi-a64","kernel":"6.1.104-AW64-DBAI"}
          {"device":"a64-nanopi-a64","kernel":"6.1.31-AW64-DBAI"}
          {"device":"h313-x96q-lpddr3","kernel":"6.1.104-AW64-DBAI"}
          {"device":"h313-x96q-lpddr3","kernel":"6.1.31-AW64-DBAI"}
          {"device":"h5-orangepi-pc2","kernel":"6.1.104-AW64-DBAI"}
          {"device":"h5-orangepi-pc2","kernel":"6.1.31-AW64-DBAI"}
          {"device":"h5-orangepi-prime","kernel":"6.1.104-AW64-DBAI"}
          {"device":"h5-orangepi-prime","kernel":"6.1.31-AW64-DBAI"}
          {"device":"h5-orangepi-zeroplus","kernel":"6.1.104-AW64-DBAI"}
          {"device":"h5-orangepi-zeroplus","kernel":"6.1.31-AW64-DBAI"}
          {"device":"h5-orangepi-zeroplus2","kernel":"6.1.104-AW64-DBAI"}
          {"device":"h5-orangepi-zeroplus2","kernel":"6.1.31-AW64-DBAI"}
          {"device":"h6-orangepi-1plus","kernel":"6.1.104-AW64-DBAI"}
          {"device":"h6-orangepi-1plus","kernel":"6.1.31-AW64-DBAI"}
          {"device":"h6-orangepi-3","kernel":"6.1.104-AW64-DBAI"}
          {"device":"h6-orangepi-3","kernel":"6.1.31-AW64-DBAI"}
          {"device":"h6-orangepi-3lts","kernel":"6.1.104-AW64-DBAI"}
          {"device":"h6-orangepi-3lts","kernel":"6.1.31-AW64-DBAI"}
          {"device":"h6-orangepi-lite2","kernel":"6.1.104-AW64-DBAI"}
          {"device":"h6-orangepi-lite2","kernel":"6.1.31-AW64-DBAI"}
          {"device":"h6-tanix-tx6","kernel":"6.1.104-AW64-DBAI"}
          {"device":"h6-tanix-tx6","kernel":"6.1.31-AW64-DBAI"}
          {"device":"h616-orangepi-zero2","kernel":"6.1.104-AW64-DBAI"}
          {"device":"h616-orangepi-zero2","kernel":"6.1.31-AW64-DBAI"}
          {"device":"h616-x96-mate","kernel":"6.1.104-AW64-DBAI"}
          {"device":"h616-x96-mate","kernel":"6.1.31-AW64-DBAI"}
          {"device":"h618-orangepi-zero2w","kernel":"6.1.104-AW64-DBAI"}
          {"device":"h618-orangepi-zero2w","kernel":"6.1.31-AW64-DBAI"}
          EOF
          )

          echo "$DEVICE_LIST" | while read -r device_config; do
            if [ -z "$device_config" ]; then continue; fi
            DEVICE=$(echo "$device_config" | jq -r .device)
            KERNEL=$(echo "$device_config" | jq -r .kernel)
            echo "=========================================================="
            echo "Membangun: Device=$DEVICE, Kernel=$KERNEL, RootFS=${{ matrix.name }}"
            echo "=========================================================="
            sudo ./ulo -y -m "$DEVICE" -r "${{ matrix.name }}" -k "$KERNEL" -s "${{ github.event.inputs.rootfs_size }}"
            echo "Membuat artefak untuk $DEVICE..."
            mkdir -p ./artifact/"$DEVICE"
            cp -rf ./out/"$DEVICE"/* ./artifact/"$DEVICE"/ || echo "Tidak ada file output untuk disalin dari $DEVICE"
          done

      - name: Membangun Device Spesifik (jika bukan 'all')
        if: github.event.inputs.device_choice != 'all'
        run: |
          CHOICE="${{ github.event.inputs.device_choice }}"
          # Mengekstrak device: ambil teks antara ": " dan " ("
          DEVICE=$(echo "$CHOICE" | sed -n 's/.*: \(.*\) (.*/\1/p')
          # Mengekstrak kernel: ambil teks antara "(Kernel " dan ")"
          KERNEL=$(echo "$CHOICE" | sed -n 's/.*(Kernel \(.*\))/\1/p')
          
          echo "=========================================================="
          echo "Pilihan Pengguna: $CHOICE"
          echo "Hasil Ekstraksi -> Device: $DEVICE, Kernel: $KERNEL"
          echo "Membangun untuk RootFS: ${{ matrix.name }}"
          echo "=========================================================="
          
          sudo ./ulo -y -m "$DEVICE" -r "${{ matrix.name }}" -k "$KERNEL" -s "${{ github.event.inputs.rootfs_size }}"
          
          echo "Membuat artefak untuk $DEVICE..."
          mkdir -p ./artifact/"$DEVICE"
          cp -rf ./out/"$DEVICE"/* ./artifact/"$DEVICE"/ || echo "Tidak ada file output untuk disalin dari $DEVICE"

      - name: Mengirim Paket
        uses: actions/upload-artifact@v4
        with:
          name: openwrt_package_${{ matrix.tag_suffix }}
          path: ./artifact/

  upload_release:
    name: 3. Create Release
    needs: [determine_rootfs, build_ipk]
    if: success()
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.determine_rootfs.outputs.matrix) }}
    steps:
      - name: Checkout Repositori
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Unduh artefak untuk ${{ matrix.tag_suffix }}
        uses: actions/download-artifact@v4
        with:
          name: openwrt_package_${{ matrix.tag_suffix }}
          path: artifacts

      - name: Gabungkan artefak
        run: |
          mkdir -p combined_artifact
          find ./artifacts -type f -exec mv {} ./combined_artifact/ \;
          echo "Isi folder yang akan dirilis:"
          ls -la combined_artifact/

      - name: Dapatkan Tanggal Saat Ini
        id: date
        run: |
          sudo apt-get install -y locales
          sudo locale-gen id_ID.UTF-8
          export LC_TIME=id_ID.UTF-8
          export TZ="Asia/Jakarta"
          bulan=$(date +%B)
          tanggal=$(date +%d)
          tahun=$(date +%Y)
          # --- PERUBAHAN: Format tag rilis diperbarui ---
          echo "release_tag=${{ matrix.tag_suffix }}_ULO-RELEASE_${bulan}-${tanggal}-${tahun}" >> $GITHUB_OUTPUT

      - name: Unggah aset rilis
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: combined_artifact/*
          tag: ${{ steps.date.outputs.release_tag }}
          file_glob: true
          overwrite: true
          body: |
            ## Rilis OpenWrt untuk Berbagai Perangkat SBC dan STB
            # --- PERUBAHAN: Teks body diperbarui ---
            Firmware ini dibuild menggunakan Github Actions dengan RootFS: **${{ matrix.tag_suffix }}**
            ### Informasi Firmware OpenWrt
            - Ukuran ROOTFS: ${{ github.event.inputs.rootfs_size }}
            - Informasi Firmware: ${{ github.event.inputs.fwinfo }}
